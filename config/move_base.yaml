# move_base_katamaran.yaml
# Katamaran-tuned move_base params (anti-oscillation version)

# top-level move_base params
controller_frequency: 15.0      # lower to avoid overreacting
planner_frequency: 1.0          # global planner stays low for marine
planner_patience: 5.0
max_planning_retries: -1

# ============ Global Costmap ============
global_costmap:
  global_frame: odom
  robot_base_frame: base_link
  update_frequency: 1.0
  publish_frequency: 1.0
  static_map: false
  rolling_window: true

  width: 500.0
  height: 500.0
  resolution: 1.0
  transform_tolerance: 1.0

  plugins:
    - {name: obstacle_layer,   type: "costmap_2d::ObstacleLayer"}
    - {name: inflation_layer,  type: "costmap_2d::InflationLayer"}

  obstacle_layer:
    observation_sources: laser_scan_sensor
    laser_scan_sensor:
      sensor_frame: laser
      data_type: LaserScan
      topic: /scan_filtered
      marking: true
      clearing: true
      max_obstacle_height: 2.5
      min_obstacle_height: 0.0
      obstacle_range: 12.0
      raytrace_range: 12.0

  inflation_layer:
    inflation_radius: 1.5
    cost_scaling_factor: 4.0

# ============ Local Costmap ============
local_costmap:
  global_frame: odom
  robot_base_frame: base_link

  update_frequency: 15.0       # match controller_frequency
  publish_frequency: 10.0
  static_map: false
  rolling_window: true

  width: 12.0
  height: 12.0
  resolution: 0.1
  transform_tolerance: 1.0

  plugins:
    - {name: obstacle_layer,   type: "costmap_2d::ObstacleLayer"}
    - {name: inflation_layer,  type: "costmap_2d::InflationLayer"}

  obstacle_layer:
    observation_sources: laser_scan_sensor
    laser_scan_sensor:
      sensor_frame: laser
      data_type: LaserScan
      topic: /scan_filtered
      marking: true
      clearing: true
      max_obstacle_height: 2.5
      min_obstacle_height: 0.0
      obstacle_range: 12.0
      raytrace_range: 12.0

  inflation_layer:
    inflation_radius: 1.0       # more smoothing
    cost_scaling_factor: 1.5

# ============ DWA Planner ============
DWAPlannerROS:
  xy_goal_tolerance:      1.0
  yaw_goal_tolerance:     1.0
  latch_xy_goal_tolerance: true

  trans_stopped_vel:      0.03
  rot_stopped_vel:        0.08
  stop_time_buffer:       0.8

  acc_lim_x:          0.025
  acc_lim_theta:      0.015
  max_vel_x:          0.35
  min_vel_x:          0.0
  max_vel_theta:      0.20

  sim_time:           2.0     # longer horizon for smoother paths
  sim_granularity:    0.1
  vx_samples:         6
  vtheta_samples:     20

  # Smoothing-focused biases
  path_distance_bias: 8.0
  goal_distance_bias: 15.0
  occdist_scale:      0.5

  oscillation_timeout:    10.0
  oscillation_distance:   1.0

  forward_point_distance: 0.325
  pdist_scale: 0.6
  gdist_scale: 0.8
  heading_lookahead: 2.0   # look further ahead for heading

# Footprint
footprint: [[0.6, 0.6], [0.6, -0.6], [-0.6, -0.6], [-0.6, 0.6]]
footprint_padding: 0.05
