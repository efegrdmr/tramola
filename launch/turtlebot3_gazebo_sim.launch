<launch>
  <!-- Global use_sim_time parameter -->
  <param name="/use_sim_time" value="true"/>

  <!-- Select TurtleBot3 model -->
  <arg name="model" default="burger" />
  <env name="TURTLEBOT3_MODEL" value="$(arg model)" />

  <!-- Robot description -->
  <param name="robot_description"
         command="$(find xacro)/xacro '$(find tramola)/urdf/turtlebot3_$(arg model).urdf.xacro'"/>

  <!-- Publish robot state and joint states -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" value="50.0" />
  </node>

  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher" output="screen">
    <param name="rate" value="50" />
  </node>

  <!-- Initial transform to bootstrap the system -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_footprint_to_base_link" 
        args="0 0 0.01 0 0 0 base_footprint base_link" />
  
  <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_odom_init" 
        args="0 0 0 0 0 0 map odom" />

  <!-- EKF 1: Local odometry (odom frame) -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_odom" output="screen" clear_params="true">
    <rosparam command="load" file="$(find tramola)/config/ekf_odom.yaml" />
    <remap from="/odometry/filtered" to="/odometry/local_filtered"/>
    <param name="tf_timeout" value="0.5"/>
    <param name="history_length" value="5.0"/>
  </node>

  <!-- GPS NavSat Transform: Converts GPS to odometry -->
  <node pkg="robot_localization" type="navsat_transform_node" name="navsat_transform" output="screen" clear_params="true">
    <rosparam command="load" file="$(find tramola)/config/navsat.yaml" />
    <!-- Input remappings -->
    <remap from="/imu/data" to="/imu"/>
    <remap from="/gps/fix" to="/fix"/>
    <remap from="/odometry/filtered" to="/odometry/local_filtered"/>
    
    <!-- Output remappings -->
    <remap from="/odometry/gps" to="/odometry/gps_corrected"/>
  </node>

  <!-- EKF 2: Global localization (map frame) -->
  <node pkg="robot_localization" type="ekf_localization_node" name="ekf_map" output="screen" clear_params="true">
    <rosparam command="load" file="$(find tramola)/config/ekf_map.yaml" />
    <remap from="/odometry/filtered" to="/odometry/global_filtered"/>
    <param name="tf_timeout" value="0.5"/>
    <param name="history_length" value="5.0"/>
  </node>

  <!-- Move base -->
  <node pkg="move_base" type="move_base" name="move_base" output="screen">
    <rosparam file="$(find tramola)/config/move_base_params.yaml" command="load"/>
  </node>

  <!-- RViz -->
  <node pkg="rviz" type="rviz" name="rviz" required="true" output="screen"
        args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_navigation.rviz"/>

  <!-- Launch Gazebo world -->
  <include file="$(find tramola)/launch/tramola_gps_world.launch">
    <arg name="model" value="$(arg model)"/>
  </include>
</launch>